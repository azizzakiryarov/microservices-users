apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  generation: 0
  image:
    dockerImageLayers: null
    dockerImageMetadata: null
    metadata:
      creationTimestamp: null
  kind: ImageStreamTag
  lookupPolicy:
    local: false
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/imported-from: microservices-users:latest
    creationTimestamp: null
    labels:
      app: microservices-users
      app.kubernetes.io/component: microservices-users
      app.kubernetes.io/instance: microservices-users
    name: microservices-users:latest
  tag:
    annotations: null
    from:
      kind: DockerImage
      name: microservices-users:latest
    generation: null
    importPolicy: {}
    name: latest
    referencePolicy:
      type: ""
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: microservices-users
      app.kubernetes.io/component: microservices-users
      app.kubernetes.io/instance: microservices-users
    name: microservices-users
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: microservices-users:latest
    postCommit: {}
    resources: {}
    source:
      git:
        uri: https://github.com/azizzakiryarov/microservices-users.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: openjdk:11-jdk-slim
          namespace: azizzakiryarov-dev
      type: Docker
    triggers:
    - github:
        secret: e5wt6dwrAQICufu-ps5r
      type: GitHub
    - generic:
        secret: SG4aiGHbN6s8qTn7Rj17
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"microservices-users:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"microservices-users\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: microservices-users
      app.kubernetes.io/component: microservices-users
      app.kubernetes.io/instance: microservices-users
    name: microservices-users
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: microservices-users
    strategy: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: microservices-users
      spec:
        containers:
        - image: ' '
          name: microservices-users
          ports:
          - containerPort: 8081
            protocol: TCP
          resources: {}
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: microservices-users
      app.kubernetes.io/component: microservices-users
      app.kubernetes.io/instance: microservices-users
    name: microservices-users
  spec:
    ports:
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      deployment: microservices-users
  status:
    loadBalancer: {}
kind: List
metadata: {}
